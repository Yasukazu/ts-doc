doctype html
html(lang="en")
  head
    meta(charset='utf-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    title HTML Document manipulation by Javascript for self training
    link(rel='stylesheet' href='https://unpkg.com/destyle.css@3.0.2/destyle.min.css')
    link(rel='stylesheet' href='./styles.css')
  body
    .col-1
      header
        nav#nav-bar.nav-bar
          details
            summary#nav-summ Index
            a.nav-link(href='#Document_Window_Navigator') Document Window Navigator
            a.nav-link(href='#Document_Object_Model') Document Object Model
            a.nav-link(href='#Basic_DOM_operation') Basic DOM operation
            a.nav-link(href='#Event_customization') Event customization
            a.nav-link(href='#Style_Sheet_Access') Style Sheet Access
        a#header-brand(href='#' title='JavaScript Document Model Application Program Interface')
          abbr(title='JavaScript') JS
          abbr(title='Document Object Model') DOM
          abbr(title='Application Program Interface') API
    .col-2
      main#main-doc
        section#Document_Window_Navigator.main-section
          h2 Document / Window / Navigator
          p Javascript can read and write: 
          ol
            li #[strong Document] -- HTML itself
            li #[strong Window] -- output area from Document
            li #[strong Navigator] -- HTML interpreter (web browser, screen reader or printer)
          article
            h3 Document interface:
            dl
              div
                dt Get an element of a document
                  s Read from Document
                dd
                  | Javascript can get a specific element in the document using query selector function:
                  br
                  code.language-javascript
                    | const 
                    var win_nav_doc
                    | = document.querySelector(&apos;#<var>win-nav-doc</var>&apos;);
              div
                dt Set a certain property of a document
                  s Write into Document
                dd
                  | Javascript can set a certain property of the document like this:
                  br
                  code.lang-js
                    var win_nav_doc
                    |.textContent = &apos;
                    var The Replaced text
                    |&apos;;
            aside
              | Such Document APIs are like these(
              a(href='https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement') HTMLElement
              |  in MDN web docs
          article
            h3 Window interface:
            dl
              dt Read viewport width
              dd
                | To get the width into a variable &apos;viewportWidth&apos; as int:
                br
                code let viewportWidth = window.innerWidth;
              dt Read viewport height
              dd
                | To get the height into a variable &apos;viewportHeight&apos; as int:
                br
                code let viewportHeight = window.innerHeight;
            aside
              | Such Document APIs are like these(
              a(href='https://developer.mozilla.org/en-US/docs/Web/API/Window') Window
              |  interface in MDN web docs)
          article
            h3 Navigator interface:
            dl
              dt
                s User agent
                | User-agent Client Hints
              dd
                s
                  | Supported Javascript version depends on 
                  strong &apos;user agent&apos;
                  |  that is &apos;web browser&apos;(like: 
                  em Firefox
                  | , 
                  em Chrome
                  | , 
                  em Edge
                  | , 
                  em Safari
                  | )).
                  br
                  |                 Ever before, the precise appearance needed to be configured according to the browser rendering engine. Following code gets &apos;user agent&apos;(web browser) as a string(text):
                  br
                | You can detect whether 
                i user agent
                |  is mobile device or not.
                br
                code
                  s const userAgent = window.navigator.userAgent;
                  br
                  |                 const isMobileAgent = window.navigator.userAgentData.mobile;
              dt User language
              dd
                | The language of browser user interface is useful to fit with it&apos;s proper webpage language.
                br
                code const userLanguage = window.navigator.language;
            aside
              | Language tag before hyphen is like: 
              a(href='https://en.wikipedia.org/wiki/IETF_language_tag') IETF language tag
              | (
              em Wikipedia
              | )
        section#Document_Object_Model.main-section
          h2 Document Object Model
          p
            | In Javascript, &apos;Document Object Model&apos; is represented as Document type interface. It is called as &apos;DOM&apos;.
          article
            p
              | DOM is a tree structure interface corresponds with HTML structure.
              br
              |               In a JavaScript code, the document model is available as the &apos;document&apos; object.
            dl
              dt To get its property
              dd
                code
                  | document.
                  em prop
              dt To call its function with parameters
              dd
                code
                  | document.
                  em func
                  | (
                  em param1
                  | , 
                  em param2
                  | )
        section#Basic_DOM_operation.main-section
          h2 Basic DOM operation
          p How to operate an HTML document
          article
            h3 Create / Append / Move / Remove a node
            dl
              dt Create a new element node with a tag
              dd
                | (create a node object by create-element method call with a parameter(tag))Script:
                br
                code let divElem = document.createElement(&apos;div&apos;);
              dt Modify the element
              dd
                | (JavaScript:) 
                code
                  | divElem.className = &quot;greeting&quot;;
                  | divElem.innerHTML = &quot;
                  strong He-lo
                  | , What&apos;s going on here?&quot;;
              dt Append the element into the document
              dd
                | (JavaScript:) 
                code
                  | document.body.append(divElem);
            aside
              | Append the element node to other location cause &apos;move&apos;, resulting old position one is automatically removed. If neeed to duplicate the element node, use 
              strong
                | cloneNode(
                em bool
                | )
              |  method. If the 
              strong
                em bool
              |  is true then deep copy else no child copy. In case to remove the element node, use 
              strong remove()
              |  method of the node itself.
        section#Event_customization.main-section
          h2 Event customization
          article
            p
              | Assigns a function to an event handler(like 
              em onclick
              | ) of a with-event-handler element(like 
              em input
              | ) of the DOM object(that is 
              em document
              | ):
            dl
              dt (HTML)
              dd
                code &lt;input id=&quot;btn_elem&quot; type=&quot;button&quot; value=&quot;Click me&quot;&gt;
              dt (script)
              dd
                code
                  | const btn_elem = document.querySelector(&quot;#btn-elem&quot;);
                  br
                  |                   const event_org_txt = event_divObj.textContent;
                  br
                  |                   let btn_counter = 0;
                  br
                  |                   btn_elem.onclick = function() {
                  span
                    | btn_counter += 1;
                    br
                    |                     event_divObj.textContent = &grave;${event_org_txt} + ${btn_counter}&grave;;
                  |                   }
            #event-div Event
            label
              input#btn-elem(type='button' value='Click me')
              |               &larr; If you click this button, then above area text becomes added [ + click-count].
        section#Style_Sheet_Access.main-section
          h2 Style (Sheet) Access
          article
            h3 How to access with CSS variables
              details(title='Click to expand')
                summary 
                  dl function:
                    dt to get
                    dd getComputedStyle(node).getPropertyValue($name) 
                    dt to set
                    dd node.style.setProperty($name, value)
                dl code:
                  dt How to get a CSS variable
                  dd
                    code const<var>hdr_h</var>= getComputedStyle(<var>node</var>).getPropertyValue(<var>'--hdr-h'</var>);
                  dt Set a CSS variable
                  dd
                    | Use
                    var setProperty(name, value)
                    br
                    code   document.querySelector(
                      var &apos;body&apos;
                      |).style.setProperty(
                      var '--hdr-h'
                      |, 
                      var new_nav_h_str
                      |);
          article
            h3 HTML Custom data attirbute for data grouping
            p
              |Use 
              strong querySelector
              |  to specify a node/element in the document. One benefit is: the same way of CSS attirbute selector 
              em the first half before hypen
              | (like: 
              code 
                em element-name
                |[class |= 
                em "n"
                | ]
              |) of CSS naming convention as &quot;hypen-connected&quot;.
            - const asideText = "Although there is another good way to group / classify HTML elements; it's"
            aside  #{asideText}
              em HTML Custom data attirbute.
        footer
          p
            | This webpage is cited from:
            cite
              a(href='https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents') MDN|Learn/JavaScript/Client-side web APIs/Manipulating documents
          p
            | Also from:
            cite
              a(href='https://javascript.info/document') JAVASCRIPT.INFO|Document|.. learn to manipulate a web-page using Javascript.
          .script-write
            dl
              dt Viewport width
              dd#viewport-width.script-write
              dt User agent: 
              dd#user-agent.script-write
              dt User language: 
              dd#user-language.script-write
              dt="CSS variable '--nav-h'"
              dd#nav-h.script-write
    script(type='text/Javascript' src='./event-example.js')
    script(type='text/Javascript' src='./nav-button.js')
